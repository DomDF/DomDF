top_n(n = n_players, wt = market_value) %>%
mutate(player_name = fct_reorder(.f = as.factor(player_name),
.x = market_value))
squad$team <- team_name
if(raw == FALSE){
return(squad)
} else {
return(raw_squad)
}
}
get_TM_squad(url)
get_TM_squad(url) %>% View()
url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE)
url %>%
xml2::read_html() %>%
rvest::html_nodes('#verein_head > div > div.dataHeader.dataExtended > div.dataMain > div > div.dataName > h1') %>%
rvest::html_text() %>%
stringr::str_replace_all(pattern = '\n', replacement = '') %>%
stringr::str_trim()
url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame() %>%
tibble::as_tibble() %>%
filter(!(is.na(X.) | X. == ''))
cols <- c('number', NA, NA, 'player', 'position', 'DoB', NA, 'height_m', 'foot', 'joined', NA, 'contract_exp', 'market_value')
colnames(squad) <- cols; squad <- squad[!is.na(names(squad))]
squad
url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame() %>%
tibble::as_tibble() %>%
filter(!(is.na(X.) | X. == ''))
cols <- c('number', NA, NA, 'player', 'position', 'DoB', NA, 'height_m', 'foot', 'joined', NA, 'contract_exp', 'market_value')
colnames(squad) <- cols; squad <- squad[!is.na(names(squad))]
squad
names(squad)
squad <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame() %>%
tibble::as_tibble() %>%
filter(!(is.na(X.) | X. == ''))
cols <- c('number', NA, NA, 'player', 'position', 'DoB', NA, 'height_m', 'foot', 'joined', NA, 'contract_exp', 'market_value')
colnames(squad) <- cols
squad
squad <- squad[!is.na(names(squad))]
squad
squad <- squad %>%
mutate(currency = case_when(
grepl(pattern = '£', x = market_value) ~ '£',
grepl(pattern = '€', x = market_value) ~ '€',
grepl(pattern = '$', x = market_value) ~ '$'
)) %>%
mutate(market_value = sub(pattern = '£|€|$', replacement = '', x = market_value)) %>%
mutate(market_value = case_when(
grepl(pattern = 'm', x = market_value) ~ 1e6 * as.numeric(sub(pattern = 'm',
replacement = '',
x = market_value)),
grepl(pattern = 'Th.', x = market_value) ~ 1e3 * as.numeric(sub(pattern = 'Th.',
replacement = '',
x = market_value))
)) %>%
mutate(contract_exp = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = contract_exp)))) %>%
mutate(joined = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = joined)))) %>%
mutate(height_m = as.numeric(gsub(pattern = ',', replacement = '.',
x = gsub(pattern = ' m', replacement = '', x = height_m)))) %>%
mutate(DoB = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '',
x = stringr::str_replace(string = DoB,
pattern = " \\(.*",
replacement = ''))))) %>%
mutate(surname = stringr::str_trim(string = stringr::word(string =  player, sep = '[.]', start = -1), side = 'both'),
name = stringr::word(string = player, sep = ' ', end = 1)) %>%
mutate(Age = lubridate::interval(start = DoB, end = Sys.Date()) / lubridate::years(1))
for (i in seq(from = 1, to = nrow(squad))){
if(grepl(pattern = squad$name[i], x = squad$surname[i])) {
squad$player_name[i] <- stringr::str_sub(string = squad$surname[i], start = 1,
end = nchar(squad$surname[i])/2)
} else {
squad$player_name[i] <- paste(squad$name[i], squad$surname[i])
}
}
squad <- squad %>%
select(-c(player, name, surname)) %>%
arrange(desc(market_value)) %>%
mutate(squad_value = sum(market_value)) %>%
top_n(n = n_players, wt = market_value) %>%
mutate(player_name = fct_reorder(.f = as.factor(player_name),
.x = market_value))
squad$team <- team_name
squad
squad <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame() %>%
tibble::as_tibble() %>%
filter(!(is.na(X.) | X. == ''))
cols <- c('number', NA, NA, 'player', 'position', 'DoB', NA, 'height_m', 'foot', 'joined', NA, 'contract_exp', 'market_value')
colnames(squad) <- cols; squad <- squad[!is.na(names(squad))]
squad %>%
mutate(currency = case_when(
grepl(pattern = '£', x = market_value) ~ '£',
grepl(pattern = '€', x = market_value) ~ '€',
grepl(pattern = '$', x = market_value) ~ '$'
))
squad %>%
mutate(currency = case_when(
grepl(pattern = '£', x = market_value) ~ '£',
grepl(pattern = '€', x = market_value) ~ '€',
grepl(pattern = '$', x = market_value) ~ '$'
)) %>%
mutate(market_value = sub(pattern = '£|€|$', replacement = '', x = market_value)) %>%
mutate(market_value = case_when(
grepl(pattern = 'm', x = market_value) ~ 1e6 * as.numeric(sub(pattern = 'm',
replacement = '',
x = market_value)),
grepl(pattern = 'Th.', x = market_value) ~ 1e3 * as.numeric(sub(pattern = 'Th.',
replacement = '',
x = market_value))
))
squad %>%
mutate(currency = case_when(
grepl(pattern = '£', x = market_value) ~ '£',
grepl(pattern = '€', x = market_value) ~ '€',
grepl(pattern = '$', x = market_value) ~ '$'
)) %>%
mutate(market_value = sub(pattern = '£|€|$', replacement = '', x = market_value)) %>%
mutate(market_value = case_when(
grepl(pattern = 'm', x = market_value) ~ 1e6 * as.numeric(sub(pattern = 'm',
replacement = '',
x = market_value)),
grepl(pattern = 'Th.', x = market_value) ~ 1e3 * as.numeric(sub(pattern = 'Th.',
replacement = '',
x = market_value))
)) %>%
mutate(contract_exp = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = contract_exp)))) %>%
mutate(joined = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = joined)))) %>%
mutate(height_m = as.numeric(gsub(pattern = ',', replacement = '.',
x = gsub(pattern = ' m', replacement = '', x = height_m)))) %>%
mutate(DoB = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '',
x = stringr::str_replace(string = DoB,
pattern = " \\(.*",
replacement = ''))))) %>%
mutate(surname = stringr::str_trim(string = stringr::word(string =  player, sep = '[.]', start = -1), side = 'both'),
name = stringr::word(string = player, sep = ' ', end = 1)) %>%
mutate(Age = lubridate::interval(start = DoB, end = Sys.Date()) / lubridate::years(1))
squad <- squad %>%
mutate(currency = case_when(
grepl(pattern = '£', x = market_value) ~ '£',
grepl(pattern = '€', x = market_value) ~ '€',
grepl(pattern = '$', x = market_value) ~ '$'
)) %>%
mutate(market_value = sub(pattern = '£|€|$', replacement = '', x = market_value)) %>%
mutate(market_value = case_when(
grepl(pattern = 'm', x = market_value) ~ 1e6 * as.numeric(sub(pattern = 'm',
replacement = '',
x = market_value)),
grepl(pattern = 'Th.', x = market_value) ~ 1e3 * as.numeric(sub(pattern = 'Th.',
replacement = '',
x = market_value))
)) %>%
mutate(contract_exp = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = contract_exp)))) %>%
mutate(joined = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = joined)))) %>%
mutate(height_m = as.numeric(gsub(pattern = ',', replacement = '.',
x = gsub(pattern = ' m', replacement = '', x = height_m)))) %>%
mutate(DoB = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '',
x = stringr::str_replace(string = DoB,
pattern = " \\(.*",
replacement = ''))))) %>%
mutate(surname = stringr::str_trim(string = stringr::word(string =  player, sep = '[.]', start = -1), side = 'both'),
name = stringr::word(string = player, sep = ' ', end = 1)) %>%
mutate(Age = lubridate::interval(start = DoB, end = Sys.Date()) / lubridate::years(1))
squad
for (i in seq(from = 1, to = nrow(squad))){
if(grepl(pattern = squad$name[i], x = squad$surname[i])) {
squad$player_name[i] <- stringr::str_sub(string = squad$surname[i], start = 1,
end = nchar(squad$surname[i])/2)
} else {
squad$player_name[i] <- paste(squad$name[i], squad$surname[i])
}
}
squad
squad %>%
select(-c(player, name, surname)) %>%
arrange(desc(market_value))
squad %>%
select(-c(player, name, surname)) %>%
arrange(desc(market_value)) %>%
mutate(squad_value = sum(market_value))
squad %>%
select(-c(player, name, surname)) %>%
arrange(desc(market_value)) %>%
mutate(squad_value = sum(market_value)) %>%
top_n(n = n_players, wt = market_value)
get_TM_squad <- function(url, raw = FALSE){
raw_squad <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE)
team_name <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#verein_head > div > div.dataHeader.dataExtended > div.dataMain > div > div.dataName > h1') %>%
rvest::html_text() %>%
stringr::str_replace_all(pattern = '\n', replacement = '') %>%
stringr::str_trim()
squad <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame() %>%
tibble::as_tibble() %>%
filter(!(is.na(X.) | X. == ''))
cols <- c('number', NA, NA, 'player', 'position', 'DoB', NA, 'height_m', 'foot', 'joined', NA, 'contract_exp', 'market_value')
colnames(squad) <- cols; squad <- squad[!is.na(names(squad))]
squad <- squad %>%
mutate(currency = case_when(
grepl(pattern = '£', x = market_value) ~ '£',
grepl(pattern = '€', x = market_value) ~ '€',
grepl(pattern = '$', x = market_value) ~ '$'
)) %>%
mutate(market_value = sub(pattern = '£|€|$', replacement = '', x = market_value)) %>%
mutate(market_value = case_when(
grepl(pattern = 'm', x = market_value) ~ 1e6 * as.numeric(sub(pattern = 'm',
replacement = '',
x = market_value)),
grepl(pattern = 'Th.', x = market_value) ~ 1e3 * as.numeric(sub(pattern = 'Th.',
replacement = '',
x = market_value))
)) %>%
mutate(contract_exp = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = contract_exp)))) %>%
mutate(joined = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = joined)))) %>%
mutate(height_m = as.numeric(gsub(pattern = ',', replacement = '.',
x = gsub(pattern = ' m', replacement = '', x = height_m)))) %>%
mutate(DoB = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '',
x = stringr::str_replace(string = DoB,
pattern = " \\(.*",
replacement = ''))))) %>%
mutate(surname = stringr::str_trim(string = stringr::word(string =  player, sep = '[.]', start = -1), side = 'both'),
name = stringr::word(string = player, sep = ' ', end = 1)) %>%
mutate(Age = lubridate::interval(start = DoB, end = Sys.Date()) / lubridate::years(1))
for (i in seq(from = 1, to = nrow(squad))){
if(grepl(pattern = squad$name[i], x = squad$surname[i])) {
squad$player_name[i] <- stringr::str_sub(string = squad$surname[i], start = 1,
end = nchar(squad$surname[i])/2)
} else {
squad$player_name[i] <- paste(squad$name[i], squad$surname[i])
}
}
squad <- squad %>%
select(-c(player, name, surname)) %>%
arrange(desc(market_value)) %>%
mutate(squad_value = sum(market_value)) %>%
mutate(player_name = fct_reorder(.f = as.factor(player_name),
.x = market_value))
squad$team <- team_name
if(raw == FALSE){
return(squad)
} else {
return(raw_squad)
}
}
get_TM_squad(url = url)
get_TM_squad(url = url, raw = TRUE)
get_TM_squad <- function(url, raw = FALSE){
url <- as.character(url)
raw_squad <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE)
team_name <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#verein_head > div > div.dataHeader.dataExtended > div.dataMain > div > div.dataName > h1') %>%
rvest::html_text() %>%
stringr::str_replace_all(pattern = '\n', replacement = '') %>%
stringr::str_trim()
squad <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame() %>%
tibble::as_tibble() %>%
filter(!(is.na(X.) | X. == ''))
cols <- c('number', NA, NA, 'player', 'position', 'DoB', NA, 'height_m', 'foot', 'joined', NA, 'contract_exp', 'market_value')
colnames(squad) <- cols; squad <- squad[!is.na(names(squad))]
squad <- squad %>%
mutate(currency = case_when(
grepl(pattern = '£', x = market_value) ~ '£',
grepl(pattern = '€', x = market_value) ~ '€',
grepl(pattern = '$', x = market_value) ~ '$'
)) %>%
mutate(market_value = sub(pattern = '£|€|$', replacement = '', x = market_value)) %>%
mutate(market_value = case_when(
grepl(pattern = 'm', x = market_value) ~ 1e6 * as.numeric(sub(pattern = 'm',
replacement = '',
x = market_value)),
grepl(pattern = 'Th.', x = market_value) ~ 1e3 * as.numeric(sub(pattern = 'Th.',
replacement = '',
x = market_value))
)) %>%
mutate(contract_exp = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = contract_exp)))) %>%
mutate(joined = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = joined)))) %>%
mutate(height_m = as.numeric(gsub(pattern = ',', replacement = '.',
x = gsub(pattern = ' m', replacement = '', x = height_m)))) %>%
mutate(DoB = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '',
x = stringr::str_replace(string = DoB,
pattern = " \\(.*",
replacement = ''))))) %>%
mutate(surname = stringr::str_trim(string = stringr::word(string =  player, sep = '[.]', start = -1), side = 'both'),
name = stringr::word(string = player, sep = ' ', end = 1)) %>%
mutate(Age = lubridate::interval(start = DoB, end = Sys.Date()) / lubridate::years(1))
for (i in seq(from = 1, to = nrow(squad))){
if(grepl(pattern = squad$name[i], x = squad$surname[i])) {
squad$player_name[i] <- stringr::str_sub(string = squad$surname[i], start = 1,
end = nchar(squad$surname[i])/2)
} else {
squad$player_name[i] <- paste(squad$name[i], squad$surname[i])
}
}
squad <- squad %>%
select(-c(player, name, surname)) %>%
arrange(desc(market_value)) %>%
mutate(squad_value = sum(market_value)) %>%
mutate(player_name = fct_reorder(.f = as.factor(player_name),
.x = market_value))
squad$team <- team_name
if(raw == FALSE){
return(squad)
} else {
return(raw_squad)
}
}
url
get_TM_squad(url = url, raw = TRUE)
get_TM_squad(url = url, raw = FALSE)
get_TM_squad(url = https://www.transfermarkt.co.uk/juventus-fc/kader/verein/506/saison_id/2020/plus/1, raw = FALSE)
get_TM_squad <- function(url, raw = FALSE){
raw_squad <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE)
team_name <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#verein_head > div > div.dataHeader.dataExtended > div.dataMain > div > div.dataName > h1') %>%
rvest::html_text() %>%
stringr::str_replace_all(pattern = '\n', replacement = '') %>%
stringr::str_trim()
squad <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame() %>%
tibble::as_tibble() %>%
filter(!(is.na(X.) | X. == ''))
cols <- c('number', NA, NA, 'player', 'position', 'DoB', NA, 'height_m', 'foot', 'joined', NA, 'contract_exp', 'market_value')
colnames(squad) <- cols; squad <- squad[!is.na(names(squad))]
squad <- squad %>%
mutate(currency = case_when(
grepl(pattern = '£', x = market_value) ~ '£',
grepl(pattern = '€', x = market_value) ~ '€',
grepl(pattern = '$', x = market_value) ~ '$'
)) %>%
mutate(market_value = sub(pattern = '£|€|$', replacement = '', x = market_value)) %>%
mutate(market_value = case_when(
grepl(pattern = 'm', x = market_value) ~ 1e6 * as.numeric(sub(pattern = 'm',
replacement = '',
x = market_value)),
grepl(pattern = 'Th.', x = market_value) ~ 1e3 * as.numeric(sub(pattern = 'Th.',
replacement = '',
x = market_value))
)) %>%
mutate(contract_exp = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = contract_exp)))) %>%
mutate(joined = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = joined)))) %>%
mutate(height_m = as.numeric(gsub(pattern = ',', replacement = '.',
x = gsub(pattern = ' m', replacement = '', x = height_m)))) %>%
mutate(DoB = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '',
x = stringr::str_replace(string = DoB,
pattern = " \\(.*",
replacement = ''))))) %>%
mutate(surname = stringr::str_trim(string = stringr::word(string =  player, sep = '[.]', start = -1), side = 'both'),
name = stringr::word(string = player, sep = ' ', end = 1)) %>%
mutate(Age = lubridate::interval(start = DoB, end = Sys.Date()) / lubridate::years(1))
for (i in seq(from = 1, to = nrow(squad))){
if(grepl(pattern = squad$name[i], x = squad$surname[i])) {
squad$player_name[i] <- stringr::str_sub(string = squad$surname[i], start = 1,
end = nchar(squad$surname[i])/2)
} else {
squad$player_name[i] <- paste(squad$name[i], squad$surname[i])
}
}
squad <- squad %>%
select(-c(player, name, surname)) %>%
arrange(desc(market_value)) %>%
mutate(squad_value = sum(market_value)) %>%
mutate(player_name = fct_reorder(.f = as.factor(player_name),
.x = market_value))
squad$team <- team_name
if(raw == FALSE){
return(squad)
} else {
return(raw_squad)
}
}
get_TM_squad(url = 'https://www.transfermarkt.co.uk/juventus-fc/kader/verein/506/saison_id/2020/plus/1')
url <- 'https://www.transfermarkt.co.uk/blackburn-rovers/kader/verein/164/saison_id/2020/plus/1'
get_TM_squad <- function(url, raw = FALSE){
raw_squad <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE)
team_name <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#verein_head > div > div.dataHeader.dataExtended > div.dataMain > div > div.dataName > h1') %>%
rvest::html_text() %>%
stringr::str_replace_all(pattern = '\n', replacement = '') %>%
stringr::str_trim()
squad <- url %>%
xml2::read_html() %>%
rvest::html_nodes('#yw1 > table') %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame() %>%
tibble::as_tibble() %>%
filter(!(is.na(X.) | X. == ''))
cols <- c('number', NA, NA, 'player', 'position', 'DoB', NA, 'height_m', 'foot', 'joined', NA, 'contract_exp', 'market_value')
colnames(squad) <- cols; squad <- squad[!is.na(names(squad))]
squad <- squad %>%
mutate(currency = case_when(
grepl(pattern = '£', x = market_value) ~ '£',
grepl(pattern = '€', x = market_value) ~ '€',
grepl(pattern = '$', x = market_value) ~ '$'
)) %>%
mutate(market_value = sub(pattern = '£|€|$', replacement = '', x = market_value)) %>%
mutate(market_value = case_when(
grepl(pattern = 'm', x = market_value) ~ 1e6 * as.numeric(sub(pattern = 'm',
replacement = '',
x = market_value)),
grepl(pattern = 'Th.', x = market_value) ~ 1e3 * as.numeric(sub(pattern = 'Th.',
replacement = '',
x = market_value))
)) %>%
mutate(contract_exp = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = contract_exp)))) %>%
mutate(joined = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '', x = joined)))) %>%
mutate(height_m = as.numeric(gsub(pattern = ',', replacement = '.',
x = gsub(pattern = ' m', replacement = '', x = height_m)))) %>%
mutate(DoB = lubridate::mdy(gsub(pattern = ' ', replacement = '-',
x = gsub(pattern = ',', replacement = '',
x = stringr::str_replace(string = DoB,
pattern = " \\(.*",
replacement = ''))))) %>%
mutate(surname = stringr::str_trim(string = stringr::word(string =  player, sep = '[.]', start = -1), side = 'both'),
name = stringr::word(string = player, sep = ' ', end = 1)) %>%
mutate(Age = lubridate::interval(start = DoB, end = Sys.Date()) / lubridate::years(1))
for (i in seq(from = 1, to = nrow(squad))){
if(grepl(pattern = squad$name[i], x = squad$surname[i])) {
squad$player_name[i] <- stringr::str_sub(string = squad$surname[i], start = 1,
end = nchar(squad$surname[i])/2)
} else {
squad$player_name[i] <- paste(squad$name[i], squad$surname[i])
}
}
squad <- squad %>%
select(-c(player, name, surname)) %>%
arrange(desc(market_value)) %>%
mutate(squad_value = sum(market_value)) %>%
mutate(player_name = fct_reorder(.f = as.factor(player_name),
.x = market_value))
squad$team <- team_name
if(raw == FALSE){
return(squad)
} else {
return(raw_squad)
}
}
get_TM_squad(url = url)
get_TM_squad(url = url) %>% View()
library(roxygen2)
library(devtools)
getwd()
document()
rm(list = ls())
document()
library(roxygen2)
library(devtools)
document()
document()
