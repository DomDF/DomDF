library(tidyverse); library(extrafont); setwd("~/PhD/Thesis")
set.seed(seed = 1008); n_load_A <- 190; n_load_B <- 10
ggplot(data = tibble(load))+
geom_histogram(mapping = aes(x = load, y = ..density..), binwidth = 2)
load <- c(rnorm(n = n_load_A, mean = 10, sd = 3),
rnorm(n = n_load_B, mean = 20, sd = 1))
SRA_data <- list(n_mix_load = 2, n_load = n_load_A + n_load_B,
load = load,
n_pp = 100, load_pp = seq(from = 0, to = 25, length.out = 100))
library(cmdstanr)
n_chains <- 4; n_warmup <- 1e3; n_draws <- 1.25e3; thinning <- 1
SRA_model <- cmdstan_model(stan_file = 'SRA.stan')
SRA_model$check_syntax()
SRA_model$generate_quantities()
setwd("~/GitHub/DomDF")
library(devtools)
library(roxygen2)
document()
devtools::install_github(repo = 'DomDF')
devtools::install_github(repo = 'DomDF/DomDF')
detach(name = 'DomDF')
library(DomDF)
detach("package:DomDF", unload = TRUE)
devtools::install_github(repo = 'DomDF/DomDF')
library(DomDF)
devtools::document()
library(tidyverse); library(VGAM)
mu.R<-25; sigma.R<-4; mu.P<-50; sigma.P<-15; N.ele<-4
# Ductile Elements ----
min.N.ele<-3; max.N.ele=8; step.N.ele<-1; min.rho<-0; max.rho<-1; step.rho<-0.1; Ductile<-data.frame(N.ele, rho=0, Beta.DPS=0)
for(N.ele in seq(from=min.N.ele, to=max.N.ele, by=step.N.ele)){
for(rho in seq(from=min.rho, to=max.rho, by=step.rho)){
if(rho==1){rho<-0.999}
mu.R.DPS<-N.ele*mu.R; sigma.DPS<-sqrt(N.ele*sigma.R^2+N.ele*(N.ele-1)*rho*sigma.R^2)#+sigma.P^2)
Beta.DPS<- (mu.R.DPS-mu.P) / sigma.DPS
newRow<-data.frame(N.ele, rho, Beta.DPS); Ductile<-rbind(Ductile, newRow)
}
}
Ductile<-Ductile[-c(1), ]
Ductile
ggplot(Ductile)+
geom_line(aes(x=Ductile$rho, y=Ductile$Beta.DPS, group=Ductile$N.ele, col=N.ele))+
theme_bw()+theme(legend.position = 'top')+labs(col='Number of Elements')+
scale_x_continuous(name='Correlation Co-efficient')+
scale_y_continuous(name='Reliability Index')
estimateR<-data.frame(r=0, f=0)
for (r in seq(from=10, to=30, by=0.1)){
f<-r*(1-pnorm(r, mean = mu.R, sd=sigma.R))
newRow<-data.frame(r, f); estimateR<-rbind(newRow, estimateR)
}
Max<-estimateR[which.max(estimateR$f),]; R0<-Max$r; N.ele<-4
Brittle<-data.frame(N.ele=0, Beta.BPS=0)
for(N.ele in seq(from=min.N.ele, to=max.N.ele, by=step.N.ele)){
mu.R.BPS<-N.ele*R0*(1-pnorm(R0, mean=mu.R, sd=sigma.R)); sigma.R.BPS<-sqrt(N.ele*R0^2*pnorm(R0, mean=mu.R, sd=sigma.R)*(1-pnorm(R0, mean=mu.R, sd=sigma.R)))#+sigma.P^2)
Beta.BPS<- (mu.R.BPS-mu.P) / sigma.R.BPS
newRow<-data.frame(N.ele, Beta.BPS); Brittle<-rbind(Brittle, newRow)
}
Brittle<-Brittle[-c(1), ]
ggplot(Brittle)+
geom_line(aes(x=Brittle$N.ele, y=Brittle$Beta.BPS))+
geom_label(aes(x=Brittle$N.ele, y=Brittle$Beta.BPS, label=format(round(Brittle$Beta.BPS,3))), nudge_y = 0.5, size=3)+
scale_x_continuous(breaks = seq(3,8,1), name='Number of Elements')+
scale_y_continuous(name='Reliability Index')+
theme_bw()
devtools::document()
devtools::install_github(repo = "DomDF/DomDF", force = T)
DomDF::gamma_params(norm_mean = 1, norm_sd = 1)
gamma_parameters <- DomDF::gamma_params(norm_mean = 1, norm_sd = 1)
gamma_parameters
gamma_parameters$loc
