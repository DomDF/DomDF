mutate(n = new_n, a = a0 + n * cgr, i_high = new_i_high, i_low = new_i_low,
a_high = case_when(
(new_insp_high == TRUE) & (a_high >= pod_high)  ~ a0,
(new_insp_high == TRUE) & (a_high < pod_high) ~ a_high,
TRUE ~ a_high + i_high * cgr),
a_low = case_when(
(new_insp_low == TRUE) & (a_low >= pod_low) ~ a0,
(new_insp_low == TRUE) & (a_low < pod_low) ~ a_low,
TRUE ~ a_low + i_low * cgr))
corrosion_df
}
update_corr_df_low <- function(corrosion_df, new_i_low, new_insp_low = FALSE){
corrosion_df <- corrosion_df %>%
mutate(i_low = new_i_low,
a_low = case_when(
(new_insp_low == TRUE) & (a_low >= pod_low) ~ a0,
(new_insp_low == TRUE) & (a_low < pod_low) ~ a_low,
TRUE ~ a_low + i_low * cgr))
corrosion_df
}
update_corr_df_high <- function(corrosion_df, new_i_high, new_insp_high = FALSE){
corrosion_df <- corrosion_df %>%
mutate(i_high = new_i_high,
a_high = case_when(
(new_insp_high == TRUE) & (a_high >= pod_high) ~ a0,
(new_insp_high == TRUE) & (a_high < pod_high) ~ a_high,
TRUE ~ a_high + i_high * cgr))
corrosion_df
}
start_year <- 0; end_year <- 20; step <- 1; i_high <- 0 -> i_low; insp_low <- FALSE -> insp_high
for (n in seq (from = start_year, to = end_year, by = step)) {
new_corrosion_df <- update_corr_df(corrosion_df = corrosion_df, new_n = n,
new_i_high = i_high, new_i_low = i_low,
new_insp_high = insp_high, new_insp_low = insp_low)
ni_pof <- (new_corrosion_df %>% filter(a > wt) %>% count())$n / n_samples
if(ni_pof > max_pof){
if((i_pof_high >= max_pof) & (i_pof_low >= max_pof)){
i_high <- 1 -> i_low; insp_high <- TRUE -> insp_low
} else if(i_pof_high >= max_pof){
i_high <- 1; insp_high <- TRUE; i_low <- i_low + 1; insp_low <- FALSE
} else if(i_pof_low >= max_pof){
i_high <- i_high + 1; insp_high <- FALSE; i_low <- 1; insp_low <- TRUE
} else{
i_high <- i_high + 1; i_low <- i_low + 1; insp_high <- FALSE -> insp_low
}
new_corrosion_df <- update_corr_df(corrosion_df = corrosion_df, new_n = n,
new_i_high = i_high, new_i_low = i_low,
new_insp_high = insp_high, new_insp_low = insp_low)
i_pof_high <- (new_corrosion_df %>% filter(a_high > wt) %>% count())$n / n_samples
i_pof_low <- (new_corrosion_df %>% filter(a_low > wt) %>% count())$n / n_samples
if(i_pof_high >= max_pof){
i_high <- 1
new_corrosion_df <- update_corr_df_high(corrosion_df = new_corrosion_df,
new_i_high = 1, new_insp_high = TRUE)
}
if(i_pof_low >= max_pof){
i_low <- 1
new_corrosion_df <- update_corr_df_low(corrosion_df = new_corrosion_df,
new_i_low = 1, new_insp_low = TRUE)
}
i_pof_high <- (new_corrosion_df %>% filter(a_high > wt) %>% count())$n / n_samples
i_pof_low <- (new_corrosion_df %>% filter(a_low > wt) %>% count())$n / n_samples
} else {
i_pof_high <- ni_pof -> i_pof_low
}
corrosion_df <- new_corrosion_df
rbi_df <- rbind(rbi_df,
tibble(year = n, ni_pof, i_pof_high, i_pof_low, max_pof, i_high, i_low))
}
rbi_df %>% head(n = 20)
ggplot(rbi_df %>% dplyr::filter(year > 0)) +
geom_point(mapping = aes(x = year, y = log10(i_pof_high), shape = 'Inspection'),
data = rbi_df %>% dplyr::filter(i_high == 1), size = 3)+
geom_point(mapping = aes(x = year, y = log10(i_pof_low), shape = 'Inspection'),
data = rbi_df %>% dplyr::filter(i_low == 1), size = 3)+
scale_shape_manual(values = c(1))+
geom_line(aes(x = year, y = log10(ni_pof), linetype = 'No Inspection'))+
geom_hline(yintercept = log10(max_pof), alpha = 0.25)+
geom_line(aes(x = year, y = log10(i_pof_high), linetype = ' Improved PoD  '))+
geom_line(aes(x = year, y = log10(i_pof_low), linetype = ' Standard PoD  '))+
scale_y_continuous(breaks = seq(-6, 0, 1), name = expression(Log[10]*"(Probability of Failure)"))+
scale_linetype_manual(values = c(3, 1, 2))+
scale_x_continuous(name = 'Years in Service', breaks = seq(from = min(rbi_df$year), to = max(rbi_df$year), by = 1))+
ggthemes::theme_base(base_size = 12, base_family = 'Cambria')+
theme(legend.title = element_blank(), plot.background = element_rect(colour = NA), legend.position = 'top')
ggplot(data = NULL) + stat_function(fun = dlnorm, args = list(meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog))+xlim(0, 3)
cgr_mu <- 1; cgr_sigma <- 1/3; cgr_params <- DomDF::lnorm_params(norm_mean = cgr_mu, norm_sd = cgr_sigma)
ggplot(data = NULL) + stat_function(fun = dlnorm, args = list(meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog))+xlim(0, 3)
cgr_mu <- 1; cgr_sigma <- 1/4; cgr_params <- DomDF::lnorm_params(norm_mean = cgr_mu, norm_sd = cgr_sigma)
ggplot(data = NULL) + stat_function(fun = dlnorm, args = list(meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog))+xlim(0, 3)
cgr_mu <- 1/2; cgr_sigma <- 1/4; cgr_params <- DomDF::lnorm_params(norm_mean = cgr_mu, norm_sd = cgr_sigma)
ggplot(data = NULL) + stat_function(fun = dlnorm, args = list(meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog))+xlim(0, 3)
# Risk & Saftey in Civil Engineering: Example 12.7 - Reliability updating by inspection of deterioration
library(tidyverse)
# a(n)=a0*exp(C*pi*s^2*n)
n_samples <- 1e7; lhs_samples <- lhs::randomLHS(n = n_samples, k = 1)
wt <- 25.4;
cgr_mu <- 1/2; cgr_sigma <- 1/4; cgr_params <- DomDF::lnorm_params(norm_mean = cgr_mu, norm_sd = cgr_sigma)
ggplot(data = NULL) + stat_function(fun = dlnorm, args = list(meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog))+xlim(0, 3)
cgr <- qlnorm(p = lhs_samples, meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog)
a0_mu <- 1
a0 <- qexp(p = lhs_samples, rate = 1/a0_mu)
n <- 0
max_pof <- 10^-3
pod_high_mu <- 2; pod_low_mu <- 3
pod_high <- qexp(p = lhs_samples, rate = pod_high_mu^-1); pod_low <- qexp(p = lhs_samples, rate = pod_low_mu^-1)
rbi_df <- tibble(year = 0, ni_pof = 0, i_pof_high = 0, i_pof_low = 0,  max_pof, i_high = 0, i_low = 0)
corrosion_df <- tibble(n, a0 = sample(a0), cgr = sample(cgr), a = sample(a0),
pod_high = sample(pod_high), pod_low = sample(pod_low),
a_high = sample(a0), a_low = sample(a0))
update_corr_df <- function(corrosion_df, new_n, new_i_high, new_i_low, new_insp_high = FALSE, new_insp_low = FALSE){
corrosion_df <- corrosion_df %>%
mutate(n = new_n, a = a0 + n * cgr, i_high = new_i_high, i_low = new_i_low,
a_high = case_when(
(new_insp_high == TRUE) & (a_high >= pod_high)  ~ a0,
(new_insp_high == TRUE) & (a_high < pod_high) ~ a_high,
TRUE ~ a_high + i_high * cgr),
a_low = case_when(
(new_insp_low == TRUE) & (a_low >= pod_low) ~ a0,
(new_insp_low == TRUE) & (a_low < pod_low) ~ a_low,
TRUE ~ a_low + i_low * cgr))
corrosion_df
}
update_corr_df_low <- function(corrosion_df, new_i_low, new_insp_low = FALSE){
corrosion_df <- corrosion_df %>%
mutate(i_low = new_i_low,
a_low = case_when(
(new_insp_low == TRUE) & (a_low >= pod_low) ~ a0,
(new_insp_low == TRUE) & (a_low < pod_low) ~ a_low,
TRUE ~ a_low + i_low * cgr))
corrosion_df
}
update_corr_df_high <- function(corrosion_df, new_i_high, new_insp_high = FALSE){
corrosion_df <- corrosion_df %>%
mutate(i_high = new_i_high,
a_high = case_when(
(new_insp_high == TRUE) & (a_high >= pod_high) ~ a0,
(new_insp_high == TRUE) & (a_high < pod_high) ~ a_high,
TRUE ~ a_high + i_high * cgr))
corrosion_df
}
start_year <- 0; end_year <- 20; step <- 1; i_high <- 0 -> i_low; insp_low <- FALSE -> insp_high
for (n in seq (from = start_year, to = end_year, by = step)) {
new_corrosion_df <- update_corr_df(corrosion_df = corrosion_df, new_n = n,
new_i_high = i_high, new_i_low = i_low,
new_insp_high = insp_high, new_insp_low = insp_low)
ni_pof <- (new_corrosion_df %>% filter(a > wt) %>% count())$n / n_samples
if(ni_pof > max_pof){
if((i_pof_high >= max_pof) & (i_pof_low >= max_pof)){
i_high <- 1 -> i_low; insp_high <- TRUE -> insp_low
} else if(i_pof_high >= max_pof){
i_high <- 1; insp_high <- TRUE; i_low <- i_low + 1; insp_low <- FALSE
} else if(i_pof_low >= max_pof){
i_high <- i_high + 1; insp_high <- FALSE; i_low <- 1; insp_low <- TRUE
} else{
i_high <- i_high + 1; i_low <- i_low + 1; insp_high <- FALSE -> insp_low
}
new_corrosion_df <- update_corr_df(corrosion_df = corrosion_df, new_n = n,
new_i_high = i_high, new_i_low = i_low,
new_insp_high = insp_high, new_insp_low = insp_low)
i_pof_high <- (new_corrosion_df %>% filter(a_high > wt) %>% count())$n / n_samples
i_pof_low <- (new_corrosion_df %>% filter(a_low > wt) %>% count())$n / n_samples
if(i_pof_high >= max_pof){
i_high <- 1
new_corrosion_df <- update_corr_df_high(corrosion_df = new_corrosion_df,
new_i_high = 1, new_insp_high = TRUE)
}
if(i_pof_low >= max_pof){
i_low <- 1
new_corrosion_df <- update_corr_df_low(corrosion_df = new_corrosion_df,
new_i_low = 1, new_insp_low = TRUE)
}
i_pof_high <- (new_corrosion_df %>% filter(a_high > wt) %>% count())$n / n_samples
i_pof_low <- (new_corrosion_df %>% filter(a_low > wt) %>% count())$n / n_samples
} else {
i_pof_high <- ni_pof -> i_pof_low
}
corrosion_df <- new_corrosion_df
rbi_df <- rbind(rbi_df,
tibble(year = n, ni_pof, i_pof_high, i_pof_low, max_pof, i_high, i_low))
}
rbi_df %>% head(n = 20)
ggplot(rbi_df %>% dplyr::filter(year > 0)) +
geom_point(mapping = aes(x = year, y = log10(i_pof_high), shape = 'Inspection'),
data = rbi_df %>% dplyr::filter(i_high == 1), size = 3)+
geom_point(mapping = aes(x = year, y = log10(i_pof_low), shape = 'Inspection'),
data = rbi_df %>% dplyr::filter(i_low == 1), size = 3)+
scale_shape_manual(values = c(1))+
geom_line(aes(x = year, y = log10(ni_pof), linetype = 'No Inspection'))+
geom_hline(yintercept = log10(max_pof), alpha = 0.25)+
geom_line(aes(x = year, y = log10(i_pof_high), linetype = ' Improved PoD  '))+
geom_line(aes(x = year, y = log10(i_pof_low), linetype = ' Standard PoD  '))+
scale_y_continuous(breaks = seq(-6, 0, 1), name = expression(Log[10]*"(Probability of Failure)"))+
scale_linetype_manual(values = c(3, 1, 2))+
scale_x_continuous(name = 'Years in Service', breaks = seq(from = min(rbi_df$year), to = max(rbi_df$year), by = 1))+
ggthemes::theme_base(base_size = 12, base_family = 'Cambria')+
theme(legend.title = element_blank(), plot.background = element_rect(colour = NA), legend.position = 'top')
# Risk & Saftey in Civil Engineering: Example 12.7 - Reliability updating by inspection of deterioration
library(tidyverse)
# a(n)=a0*exp(C*pi*s^2*n)
n_samples <- 1e7; lhs_samples <- lhs::randomLHS(n = n_samples, k = 1)
wt <- 18;
cgr_mu <- 1/2; cgr_sigma <- 1/4; cgr_params <- DomDF::lnorm_params(norm_mean = cgr_mu, norm_sd = cgr_sigma)
ggplot(data = NULL) + stat_function(fun = dlnorm, args = list(meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog))+xlim(0, 3)
cgr <- qlnorm(p = lhs_samples, meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog)
a0_mu <- 1
a0 <- qexp(p = lhs_samples, rate = 1/a0_mu)
n <- 0
max_pof <- 10^-3
pod_high_mu <- 2; pod_low_mu <- 3
pod_high <- qexp(p = lhs_samples, rate = pod_high_mu^-1); pod_low <- qexp(p = lhs_samples, rate = pod_low_mu^-1)
rbi_df <- tibble(year = 0, ni_pof = 0, i_pof_high = 0, i_pof_low = 0,  max_pof, i_high = 0, i_low = 0)
corrosion_df <- tibble(n, a0 = sample(a0), cgr = sample(cgr), a = sample(a0),
pod_high = sample(pod_high), pod_low = sample(pod_low),
a_high = sample(a0), a_low = sample(a0))
update_corr_df <- function(corrosion_df, new_n, new_i_high, new_i_low, new_insp_high = FALSE, new_insp_low = FALSE){
corrosion_df <- corrosion_df %>%
mutate(n = new_n, a = a0 + n * cgr, i_high = new_i_high, i_low = new_i_low,
a_high = case_when(
(new_insp_high == TRUE) & (a_high >= pod_high)  ~ a0,
(new_insp_high == TRUE) & (a_high < pod_high) ~ a_high,
TRUE ~ a_high + i_high * cgr),
a_low = case_when(
(new_insp_low == TRUE) & (a_low >= pod_low) ~ a0,
(new_insp_low == TRUE) & (a_low < pod_low) ~ a_low,
TRUE ~ a_low + i_low * cgr))
corrosion_df
}
update_corr_df_low <- function(corrosion_df, new_i_low, new_insp_low = FALSE){
corrosion_df <- corrosion_df %>%
mutate(i_low = new_i_low,
a_low = case_when(
(new_insp_low == TRUE) & (a_low >= pod_low) ~ a0,
(new_insp_low == TRUE) & (a_low < pod_low) ~ a_low,
TRUE ~ a_low + i_low * cgr))
corrosion_df
}
update_corr_df_high <- function(corrosion_df, new_i_high, new_insp_high = FALSE){
corrosion_df <- corrosion_df %>%
mutate(i_high = new_i_high,
a_high = case_when(
(new_insp_high == TRUE) & (a_high >= pod_high) ~ a0,
(new_insp_high == TRUE) & (a_high < pod_high) ~ a_high,
TRUE ~ a_high + i_high * cgr))
corrosion_df
}
start_year <- 0; end_year <- 20; step <- 1; i_high <- 0 -> i_low; insp_low <- FALSE -> insp_high
for (n in seq (from = start_year, to = end_year, by = step)) {
new_corrosion_df <- update_corr_df(corrosion_df = corrosion_df, new_n = n,
new_i_high = i_high, new_i_low = i_low,
new_insp_high = insp_high, new_insp_low = insp_low)
ni_pof <- (new_corrosion_df %>% filter(a > wt) %>% count())$n / n_samples
if(ni_pof > max_pof){
if((i_pof_high >= max_pof) & (i_pof_low >= max_pof)){
i_high <- 1 -> i_low; insp_high <- TRUE -> insp_low
} else if(i_pof_high >= max_pof){
i_high <- 1; insp_high <- TRUE; i_low <- i_low + 1; insp_low <- FALSE
} else if(i_pof_low >= max_pof){
i_high <- i_high + 1; insp_high <- FALSE; i_low <- 1; insp_low <- TRUE
} else{
i_high <- i_high + 1; i_low <- i_low + 1; insp_high <- FALSE -> insp_low
}
new_corrosion_df <- update_corr_df(corrosion_df = corrosion_df, new_n = n,
new_i_high = i_high, new_i_low = i_low,
new_insp_high = insp_high, new_insp_low = insp_low)
i_pof_high <- (new_corrosion_df %>% filter(a_high > wt) %>% count())$n / n_samples
i_pof_low <- (new_corrosion_df %>% filter(a_low > wt) %>% count())$n / n_samples
if(i_pof_high >= max_pof){
i_high <- 1
new_corrosion_df <- update_corr_df_high(corrosion_df = new_corrosion_df,
new_i_high = 1, new_insp_high = TRUE)
}
if(i_pof_low >= max_pof){
i_low <- 1
new_corrosion_df <- update_corr_df_low(corrosion_df = new_corrosion_df,
new_i_low = 1, new_insp_low = TRUE)
}
i_pof_high <- (new_corrosion_df %>% filter(a_high > wt) %>% count())$n / n_samples
i_pof_low <- (new_corrosion_df %>% filter(a_low > wt) %>% count())$n / n_samples
} else {
i_pof_high <- ni_pof -> i_pof_low
}
corrosion_df <- new_corrosion_df
rbi_df <- rbind(rbi_df,
tibble(year = n, ni_pof, i_pof_high, i_pof_low, max_pof, i_high, i_low))
}
rbi_df %>% head(n = 20)
ggplot(rbi_df %>% dplyr::filter(year > 0)) +
geom_point(mapping = aes(x = year, y = log10(i_pof_high), shape = 'Inspection'),
data = rbi_df %>% dplyr::filter(i_high == 1), size = 3)+
geom_point(mapping = aes(x = year, y = log10(i_pof_low), shape = 'Inspection'),
data = rbi_df %>% dplyr::filter(i_low == 1), size = 3)+
scale_shape_manual(values = c(1))+
geom_line(aes(x = year, y = log10(ni_pof), linetype = 'No Inspection'))+
geom_hline(yintercept = log10(max_pof), alpha = 0.25)+
geom_line(aes(x = year, y = log10(i_pof_high), linetype = ' Improved PoD  '))+
geom_line(aes(x = year, y = log10(i_pof_low), linetype = ' Standard PoD  '))+
scale_y_continuous(breaks = seq(-6, 0, 1), name = expression(Log[10]*"(Probability of Failure)"))+
scale_linetype_manual(values = c(3, 1, 2))+
scale_x_continuous(name = 'Years in Service', breaks = seq(from = min(rbi_df$year), to = max(rbi_df$year), by = 1))+
ggthemes::theme_base(base_size = 12, base_family = 'Cambria')+
theme(legend.title = element_blank(), plot.background = element_rect(colour = NA), legend.position = 'top')
# Risk & Saftey in Civil Engineering: Example 12.7 - Reliability updating by inspection of deterioration
library(tidyverse)
# a(n)=a0*exp(C*pi*s^2*n)
n_samples <- 1e7; lhs_samples <- lhs::randomLHS(n = n_samples, k = 1)
wt <- 15;
cgr_mu <- 1/2; cgr_sigma <- 1/4; cgr_params <- DomDF::lnorm_params(norm_mean = cgr_mu, norm_sd = cgr_sigma)
ggplot(data = NULL) + stat_function(fun = dlnorm, args = list(meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog))+xlim(0, 3)
cgr <- qlnorm(p = lhs_samples, meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog)
a0_mu <- 1
a0 <- qexp(p = lhs_samples, rate = 1/a0_mu)
n <- 0
max_pof <- 10^-3
pod_high_mu <- 2; pod_low_mu <- 3
pod_high <- qexp(p = lhs_samples, rate = pod_high_mu^-1); pod_low <- qexp(p = lhs_samples, rate = pod_low_mu^-1)
rbi_df <- tibble(year = 0, ni_pof = 0, i_pof_high = 0, i_pof_low = 0,  max_pof, i_high = 0, i_low = 0)
corrosion_df <- tibble(n, a0 = sample(a0), cgr = sample(cgr), a = sample(a0),
pod_high = sample(pod_high), pod_low = sample(pod_low),
a_high = sample(a0), a_low = sample(a0))
update_corr_df <- function(corrosion_df, new_n, new_i_high, new_i_low, new_insp_high = FALSE, new_insp_low = FALSE){
corrosion_df <- corrosion_df %>%
mutate(n = new_n, a = a0 + n * cgr, i_high = new_i_high, i_low = new_i_low,
a_high = case_when(
(new_insp_high == TRUE) & (a_high >= pod_high)  ~ a0,
(new_insp_high == TRUE) & (a_high < pod_high) ~ a_high,
TRUE ~ a_high + i_high * cgr),
a_low = case_when(
(new_insp_low == TRUE) & (a_low >= pod_low) ~ a0,
(new_insp_low == TRUE) & (a_low < pod_low) ~ a_low,
TRUE ~ a_low + i_low * cgr))
corrosion_df
}
update_corr_df_low <- function(corrosion_df, new_i_low, new_insp_low = FALSE){
corrosion_df <- corrosion_df %>%
mutate(i_low = new_i_low,
a_low = case_when(
(new_insp_low == TRUE) & (a_low >= pod_low) ~ a0,
(new_insp_low == TRUE) & (a_low < pod_low) ~ a_low,
TRUE ~ a_low + i_low * cgr))
corrosion_df
}
update_corr_df_high <- function(corrosion_df, new_i_high, new_insp_high = FALSE){
corrosion_df <- corrosion_df %>%
mutate(i_high = new_i_high,
a_high = case_when(
(new_insp_high == TRUE) & (a_high >= pod_high) ~ a0,
(new_insp_high == TRUE) & (a_high < pod_high) ~ a_high,
TRUE ~ a_high + i_high * cgr))
corrosion_df
}
start_year <- 0; end_year <- 20; step <- 1; i_high <- 0 -> i_low; insp_low <- FALSE -> insp_high
for (n in seq (from = start_year, to = end_year, by = step)) {
new_corrosion_df <- update_corr_df(corrosion_df = corrosion_df, new_n = n,
new_i_high = i_high, new_i_low = i_low,
new_insp_high = insp_high, new_insp_low = insp_low)
ni_pof <- (new_corrosion_df %>% filter(a > wt) %>% count())$n / n_samples
if(ni_pof > max_pof){
if((i_pof_high >= max_pof) & (i_pof_low >= max_pof)){
i_high <- 1 -> i_low; insp_high <- TRUE -> insp_low
} else if(i_pof_high >= max_pof){
i_high <- 1; insp_high <- TRUE; i_low <- i_low + 1; insp_low <- FALSE
} else if(i_pof_low >= max_pof){
i_high <- i_high + 1; insp_high <- FALSE; i_low <- 1; insp_low <- TRUE
} else{
i_high <- i_high + 1; i_low <- i_low + 1; insp_high <- FALSE -> insp_low
}
new_corrosion_df <- update_corr_df(corrosion_df = corrosion_df, new_n = n,
new_i_high = i_high, new_i_low = i_low,
new_insp_high = insp_high, new_insp_low = insp_low)
i_pof_high <- (new_corrosion_df %>% filter(a_high > wt) %>% count())$n / n_samples
i_pof_low <- (new_corrosion_df %>% filter(a_low > wt) %>% count())$n / n_samples
if(i_pof_high >= max_pof){
i_high <- 1
new_corrosion_df <- update_corr_df_high(corrosion_df = new_corrosion_df,
new_i_high = 1, new_insp_high = TRUE)
}
if(i_pof_low >= max_pof){
i_low <- 1
new_corrosion_df <- update_corr_df_low(corrosion_df = new_corrosion_df,
new_i_low = 1, new_insp_low = TRUE)
}
i_pof_high <- (new_corrosion_df %>% filter(a_high > wt) %>% count())$n / n_samples
i_pof_low <- (new_corrosion_df %>% filter(a_low > wt) %>% count())$n / n_samples
} else {
i_pof_high <- ni_pof -> i_pof_low
}
corrosion_df <- new_corrosion_df
rbi_df <- rbind(rbi_df,
tibble(year = n, ni_pof, i_pof_high, i_pof_low, max_pof, i_high, i_low))
}
rbi_df %>% head(n = 20)
ggplot(rbi_df %>% dplyr::filter(year > 0)) +
geom_point(mapping = aes(x = year, y = log10(i_pof_high), shape = 'Inspection'),
data = rbi_df %>% dplyr::filter(i_high == 1), size = 3)+
geom_point(mapping = aes(x = year, y = log10(i_pof_low), shape = 'Inspection'),
data = rbi_df %>% dplyr::filter(i_low == 1), size = 3)+
scale_shape_manual(values = c(1))+
geom_line(aes(x = year, y = log10(ni_pof), linetype = 'No Inspection'))+
geom_hline(yintercept = log10(max_pof), alpha = 0.25)+
geom_line(aes(x = year, y = log10(i_pof_high), linetype = ' Improved PoD  '))+
geom_line(aes(x = year, y = log10(i_pof_low), linetype = ' Standard PoD  '))+
scale_y_continuous(breaks = seq(-6, 0, 1), name = expression(Log[10]*"(Probability of Failure)"))+
scale_linetype_manual(values = c(3, 1, 2))+
scale_x_continuous(name = 'Years in Service', breaks = seq(from = min(rbi_df$year), to = max(rbi_df$year), by = 1))+
ggthemes::theme_base(base_size = 12, base_family = 'Cambria')+
theme(legend.title = element_blank(), plot.background = element_rect(colour = NA), legend.position = 'top')
# Risk & Saftey in Civil Engineering: Example 12.7 - Reliability updating by inspection of deterioration
library(tidyverse)
# a(n)=a0*exp(C*pi*s^2*n)
n_samples <- 3e7; lhs_samples <- lhs::randomLHS(n = n_samples, k = 1)
wt <- 15;
cgr_mu <- 1/2; cgr_sigma <- 1/4; cgr_params <- DomDF::lnorm_params(norm_mean = cgr_mu, norm_sd = cgr_sigma)
ggplot(data = NULL) + stat_function(fun = dlnorm, args = list(meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog))+xlim(0, 3)
cgr <- qlnorm(p = lhs_samples, meanlog = cgr_params$meanlog, sdlog = cgr_params$sdlog)
a0_mu <- 1
a0 <- qexp(p = lhs_samples, rate = 1/a0_mu)
n <- 0
max_pof <- 10^-3
pod_high_mu <- 2; pod_low_mu <- 3
pod_high <- qexp(p = lhs_samples, rate = pod_high_mu^-1); pod_low <- qexp(p = lhs_samples, rate = pod_low_mu^-1)
rbi_df <- tibble(year = 0, ni_pof = 0, i_pof_high = 0, i_pof_low = 0,  max_pof, i_high = 0, i_low = 0)
corrosion_df <- tibble(n, a0 = sample(a0), cgr = sample(cgr), a = sample(a0),
pod_high = sample(pod_high), pod_low = sample(pod_low),
a_high = sample(a0), a_low = sample(a0))
update_corr_df <- function(corrosion_df, new_n, new_i_high, new_i_low, new_insp_high = FALSE, new_insp_low = FALSE){
corrosion_df <- corrosion_df %>%
mutate(n = new_n, a = a0 + n * cgr, i_high = new_i_high, i_low = new_i_low,
a_high = case_when(
(new_insp_high == TRUE) & (a_high >= pod_high)  ~ a0,
(new_insp_high == TRUE) & (a_high < pod_high) ~ a_high,
TRUE ~ a_high + i_high * cgr),
a_low = case_when(
(new_insp_low == TRUE) & (a_low >= pod_low) ~ a0,
(new_insp_low == TRUE) & (a_low < pod_low) ~ a_low,
TRUE ~ a_low + i_low * cgr))
corrosion_df
}
update_corr_df_low <- function(corrosion_df, new_i_low, new_insp_low = FALSE){
corrosion_df <- corrosion_df %>%
mutate(i_low = new_i_low,
a_low = case_when(
(new_insp_low == TRUE) & (a_low >= pod_low) ~ a0,
(new_insp_low == TRUE) & (a_low < pod_low) ~ a_low,
TRUE ~ a_low + i_low * cgr))
corrosion_df
}
update_corr_df_high <- function(corrosion_df, new_i_high, new_insp_high = FALSE){
corrosion_df <- corrosion_df %>%
mutate(i_high = new_i_high,
a_high = case_when(
(new_insp_high == TRUE) & (a_high >= pod_high) ~ a0,
(new_insp_high == TRUE) & (a_high < pod_high) ~ a_high,
TRUE ~ a_high + i_high * cgr))
corrosion_df
}
start_year <- 0; end_year <- 20; step <- 1; i_high <- 0 -> i_low; insp_low <- FALSE -> insp_high
for (n in seq (from = start_year, to = end_year, by = step)) {
new_corrosion_df <- update_corr_df(corrosion_df = corrosion_df, new_n = n,
new_i_high = i_high, new_i_low = i_low,
new_insp_high = insp_high, new_insp_low = insp_low)
ni_pof <- (new_corrosion_df %>% filter(a > wt) %>% count())$n / n_samples
if(ni_pof > max_pof){
if((i_pof_high >= max_pof) & (i_pof_low >= max_pof)){
i_high <- 1 -> i_low; insp_high <- TRUE -> insp_low
} else if(i_pof_high >= max_pof){
i_high <- 1; insp_high <- TRUE; i_low <- i_low + 1; insp_low <- FALSE
} else if(i_pof_low >= max_pof){
i_high <- i_high + 1; insp_high <- FALSE; i_low <- 1; insp_low <- TRUE
} else{
i_high <- i_high + 1; i_low <- i_low + 1; insp_high <- FALSE -> insp_low
}
new_corrosion_df <- update_corr_df(corrosion_df = corrosion_df, new_n = n,
new_i_high = i_high, new_i_low = i_low,
new_insp_high = insp_high, new_insp_low = insp_low)
i_pof_high <- (new_corrosion_df %>% filter(a_high > wt) %>% count())$n / n_samples
i_pof_low <- (new_corrosion_df %>% filter(a_low > wt) %>% count())$n / n_samples
if(i_pof_high >= max_pof){
i_high <- 1
new_corrosion_df <- update_corr_df_high(corrosion_df = new_corrosion_df,
new_i_high = 1, new_insp_high = TRUE)
}
if(i_pof_low >= max_pof){
i_low <- 1
new_corrosion_df <- update_corr_df_low(corrosion_df = new_corrosion_df,
new_i_low = 1, new_insp_low = TRUE)
}
i_pof_high <- (new_corrosion_df %>% filter(a_high > wt) %>% count())$n / n_samples
i_pof_low <- (new_corrosion_df %>% filter(a_low > wt) %>% count())$n / n_samples
} else {
i_pof_high <- ni_pof -> i_pof_low
}
corrosion_df <- new_corrosion_df
rbi_df <- rbind(rbi_df,
tibble(year = n, ni_pof, i_pof_high, i_pof_low, max_pof, i_high, i_low))
}
rbi_df %>% head(n = 20)
ggplot(rbi_df %>% dplyr::filter(year > 0)) +
geom_point(mapping = aes(x = year, y = log10(i_pof_high), shape = 'Inspection'),
data = rbi_df %>% dplyr::filter(i_high == 1), size = 3)+
geom_point(mapping = aes(x = year, y = log10(i_pof_low), shape = 'Inspection'),
data = rbi_df %>% dplyr::filter(i_low == 1), size = 3)+
scale_shape_manual(values = c(1))+
geom_line(aes(x = year, y = log10(ni_pof), linetype = 'No Inspection'))+
geom_hline(yintercept = log10(max_pof), alpha = 0.25)+
geom_line(aes(x = year, y = log10(i_pof_high), linetype = ' Improved PoD  '))+
geom_line(aes(x = year, y = log10(i_pof_low), linetype = ' Standard PoD  '))+
scale_y_continuous(breaks = seq(-6, 0, 1), name = expression(Log[10]*"(Probability of Failure)"))+
scale_linetype_manual(values = c(3, 1, 2))+
scale_x_continuous(name = 'Years in Service', breaks = seq(from = min(rbi_df$year), to = max(rbi_df$year), by = 1))+
ggthemes::theme_base(base_size = 12, base_family = 'Cambria')+
theme(legend.title = element_blank(), plot.background = element_rect(colour = NA), legend.position = 'top')
